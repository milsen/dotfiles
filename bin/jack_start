#!/bin/bash --
#
# "$HOME"/bin/jack_start by milsen
#
# This script checks whether a USB soundcard is connected. If so, it creates a
# ~/jackdrc which is then executed by qjackctl at startup. The executed command
# starts JACK with a real-time scheduling priority of 80. and sets JACK
# parameters for low latency and few xruns: It holds that
#                       latency = nperiods*(rate/period)
# A low latency, however, also increases the chance of xruns.
# The jackd command is equivalent to (but sometimes works better than):
#
# jack_control start
# jack_control eps realtime true
# jack_control eps realtime-priority 80
# jack_control ds alsa
# jack_control dps device hw:USB
# jack_control dps rate 44100
# jack_control dps period 128
# jack_control dps nperiods 3

# If the audio interface is not connected, exit.
if [ -z "$(grep "USB-Audio" /proc/asound/cards)" ]; then
  echo "Audio interface is not connected."
  exit 1
fi

# Suspend PulseAudio.
pacmd suspend true

# If JACK's not starting, see whether other processes are using the sound card:
echo "Searching for processes blocking the USB sound card..."
sudo fuser -vki -TERM /dev/snd/pcmC1*
if sudo fuser -s /dev/snd/pcmC1*; then
  exit 1
fi

# Sometimes the existing jack config file causes problems, delete it:
rm -f ~/.config/jack/conf.xml

# Create .jackdrc with the correct settings for low latency/few xruns (qjackctl
# does this automatically according to "$HOME"/.config/rncbc.org/QjackCtl.conf).
# echo '/usr/bin/jackd -v -R -P80 -dalsa -dhw:USB -r44100 -p128 -n3' > "$HOME"/.jackdrc

# Open qjackctl which should start jackd using the command in .jackdrc:
qjackctl &

# Set real-time scheduling priority for JACK to 80.
sudo schedtool -R -p 80 $(pidof jackd)

# Wait until jack is started.
sleep 2

# Set JACK sink and source for PulseAudio.
pactl load-module module-jack-sink channels=2 > /dev/null
pactl load-module module-jack-source channels=2 > /dev/null
pacmd set-default-sink jack_out
pacmd set-default-source jack_in

# Move all inputs to JACK sink.
inputs=$(pacmd list-sink-inputs | grep index | cut -d':' -f2 | cut -d' ' -f2)
for id in $inputs; do
  pactl move-sink-input "$id" jack_out
done

# Set up timidity for MIDI playback.
nohup timidity -iA -Oj > /dev/null 2>&1 &

# Get ALSA MIDI ports to JACK.
a2jmidid -e > /dev/null 2>&1 &
